simulation_metadata:
  device: "cpu"
  num_episodes: 1
  num_steps_per_episode: 50
  num_substeps_per_step: 3
  calibration: false
  visualize: true
  num_consumers: 50

metadata:
  product_names:
    name: "Product Names"
    value: ["Product A", "Product B", "Product C"]

state:
  environment:
    restock_threshold:
      name: "Restock Threshold"
      learnable: false
      shape: 1
      dtype: "float"
      value: 20
      initialization_function:
        generator: "fixed_value"
        arguments:
          shape: 1
          value: 20
    restock_quantity:
      name: "Restock Quantity"
      learnable: false  
      shape: 1
      dtype: "float"
      value: 100
      initialization_function:
        generator: "fixed_value"
        arguments:
          shape: 1
          value: 100
    product_ids:
      name: "Product IDs"
      learnable: false
      shape: 3
      dtype: "int"
      value: [1, 2, 3]
      initialization_function:
        generator: "fixed_value"
        arguments:
          shape: 3
          value: [1, 2, 3]
    product_prices:
      name: "Product Prices"
      learnable: false 
      shape: 3
      dtype: "float"
      value: [20.0, 15.0, 10.0]
      initialization_function:    
        generator: "fixed_value"
        arguments:
          shape: 3
          value: [20.0, 15.0, 10.0]
    product_stocks:
      name: "Product Stocks"
      learnable: false 
      shape: 3
      dtype: "float"
      value: [10.0, 5.0, 50.0]
      initialization_function:
        generator: "fixed_value"
        arguments:
          shape: 3
          value: [10.0, 5.0, 50.0]
  agents:
    bap:
      number: 50
      properties:
        id:
          name: "Consumer ID"
          shape: [50, 1]
          dtype: "int"
          initialization_function:
            learnable: false
            generator: "generate_ids"
            arguments:
              shape: [50, 1]
              dtype: "int"
        budget:
          name: "Budget"
          shape: [50, 1]
          dtype: "float"
          initialization_function:
            generator: "random_float"
            arguments:
              learnable: false
              shape: [50, 1]
              lower_limit: 50
              upper_limit: 200
        price_sensitivity:
          name: "Price Sensitivity"
          shape: [50, 1]
          dtype: "float"
          initialization_function:
            generator: "random_float"
            arguments:
              learnable: true
              shape: [50, 1]
              lower_limit: 0.5
              upper_limit: 1.5

substeps:
  "0":
    name: "Restock"
    description: "Restock products when stock is below threshold"
    active_agents: ["environment"]
    observation:
      environment:
        check_stock_levels:
          generator: "Restock"
          arguments:
            shape: [1]
            input_variables: ["environment"]
            output_variables: ["environment"]
    policy: {}
    transition: {}
  "1":
    name: "Purchase"
    description: "Consumers decide what products to purchase"
    active_agents: ["bap"]
    observation: {}
    policy:
      bap:
        make_purchase_decision:
          generator: "Purchase"
          arguments:
            shape: [50, 1]
            input_variables: ["agents", "environment"]
            output_variables: ["actions"]
    transition: {}
  "2":
    name: "Deliver"
    description: "Deliver products to consumers and update stock"
    active_agents: ["environment"]
    observation: {}
    policy: {}
    transition:
      deliver_products:
        generator: "Deliver"
        arguments:
          shape: 3
          input_variables: ["environment", "actions"]
          output_variables: ["environment"]
